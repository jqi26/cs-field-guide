# kind: ConfigMap
# apiVersion: v1
# metadata:
#   name: entrypoint-configmap
# data:
#   docker-development-entrypoint.sh: |
#     #!/bin/bash
#     function postgres_ready(){
#     /docker_venv/bin/python << END
#     import sys
#     import psycopg2
#     try:
#         conn = psycopg2.connect(dbname="postgres", user="postgres", host="postgres", port="5434")
#     except psycopg2.OperationalError:
#         sys.exit(-1)
#     sys.exit(0)
#     END
#     }
#     until postgres_ready; do
#       >&2 echo "Postgres is unavailable - sleeping"
#       sleep 1
#     done
#     >&2 echo "Postgres is up - continuing..."
#     echo "Compiling message files"
#     /docker_venv/bin/python3 ./manage.py compilemessages
#     # Start gunicorn service
#     echo "Starting gunicorn"
#     /docker_venv/bin/gunicorn -c ./gunicorn.conf.py -b :$PORT config.wsgi --reload
# ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-deployment
  labels:
    app: django
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django
  template:
    metadata:
      labels:
        app: django
    spec:
      containers:
      - name: django
        image: danalambert/cs-field-guide_django
        ports:
        - containerPort: 81
        command: ["/cs-field-guide/csfieldguide/docker-development-entrypoint.sh"]
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: postgres-credentials
                key: user
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-credentials
                key: password
          - name: POSTGRES_HOST
            value: postgres-service
          - name: DJANGO_SETTINGS_MODULE
            value: config.settings.local
          - name: INCLUDE_INCONTEXT_L10N
            value: "False"
          - name: PORT
            value: "8080"
        volumeMounts:
        - mountPath: /cs-field-guide
          name: fieldguide-project
        # - mountPath: /scripts
        #   name: configs
      initContainers:
      - name: gulp-build
        image: danalambert/cs-field-guide_nginx
        command: ["sh", "-c", "gulp build -f /app/csfieldguide/gulpfile.js"]
        volumeMounts:
        - mountPath: /app/csfieldguide
          name: project-files
        - mountPath: /app/csfieldguide/node_modules
          name: node-modules
      volumes:
      # - name: configs
      #   configMap:
      #     name: entrypoint-configmap
      #     defaultMode: 0744
      - name: fieldguide-project
        hostPath:
          path: /home/docker/cs-field-guide
      - name: project-files
        hostPath:
          path: /home/docker/cs-field-guide/csfieldguide
      - name: node-modules
        persistentVolumeClaim:
          claimName: node-claim0
---
apiVersion: v1
kind: Service
metadata:
  name: django-service
spec:
  selector:
    app: django
  ports:
    - protocol: TCP
      port: 81
      targetPort: 8080
